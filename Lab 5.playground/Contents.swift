//Задание 1
//Предположим, вы являетесь координатором общественного благотворительного мероприятия и ведете список зарегистрированных. Создайте переменную registrationList, который будет хранит имя зарегистрированных в типе данных String. Массив должен быть пустым.

var registrationList = [String]()

//Ваша подруга Сара первая зарегистрировалась на мероприятие. Добавьте ее имя в registrationList, используя метод append(). Выведите содержимое массива в консоль.

registrationList.append("Сара")
print(registrationList)

//Добавьте четыре дополнительных имени в массив с помощью оператора ‘+=’. Все имена должны быть добавлены за один шаг. Выведите содержимое массива в консоль.

registrationList += ["Алмат", "Максим", "Женя", "Даурен"]
print(registrationList)

//Используйте метод insert(_: at:), чтобы добавить имя “Алмас” в массив в качестве второго элемента. Распечатайте содержимое массива.

registrationList.insert("Алмас", at: 1)
print(registrationList)

//Кто то не смог прийти и передал свое место другу. Используя индекс массива, замените шестой элемент на “Алуа”. Выведите содержимое массива в консоль.

registrationList[5] = "Алуа"
print(registrationList)

//Используйте метод removeLast() в registrationList. Если все сделано правильно, должно удалиться имя “Алуа” из массива. Сохраните результат removeLast() в новую константу deletedItem, затем выведите в консоль deletedItem.

let deletedItem = registrationList.removeLast()
print(deletedItem)


//Задание 2
//Ваше приложение по фитнес трекеру показывает пользователем список возможных упражнений. Ваш фитнес трекер показывает пользователям список упражнений, сгруппированных по типу активности (например, упражнения по ходьбе, упражнения по бегу, по гимнастике и т. д.).
//Используя массивы типа String, создайте 2 списка из упражнении. В одном пусть будут упражнения для бега, в другом упражнения для ходьбы и в каждом минимум 2 упражнения.

var runExercises = ["Бег 1", "Бег 2"]
var walkExercises = ["Ходьба 1", "Ходьба 2", "Ходьба 3"]

//В вашем приложений вы хотите показать все эти упражнения на одном экране, сгруппированные по разделам. Создайте массив challenges, который содержит каждый список упражнении который вы создали (вложенный массив). Используя challenges выведите в консоль первый элемент из второго списка.

var challenges = [runExercises, walkExercises]
print(challenges[1][0])

//В конце каждого месяца все упражнения сбрасываются. Используйте метод removeAll() удалите все упражнения из массива challenges.

challenges.removeAll()

//Создайте новый массив типа ‘String’, в котором будут упражнения которые пользователь сделал вместо доступных упражнении. Массив может быть пустым или содержать несколько элементов. Теперь напишите оператор if, который через isEmpty проверяет содержимое массива. Если массив пустой, выведите текст, который предлагает пользователю начать делать упражнения. Добавьте оператор else-if, который напечатает «Вы выбрали задание \( )», если число элементов в массиве равно 1. Затем добавьте оператор else, который напечатает «Вы выбрали несколько заданий», если в массиве больше 1 элементов.

var userExercises = ["Пользовательское упражнение 1"]
if userExercises.isEmpty {
    print("Можете начать упражнения")
} else if userExercises.count == 1 {
    print("Вы выбрали задание \(userExercises[0])")
} else {
    print("Вы выбрали несколько заданий")
}


//Задание 3
//Создайте переменную dictionary типа [String: Int], которую можно использовать для поиска количества дней в определенном месяце. Ключом будет месяца, а значением количество дней в этом месяце. Например: январь - 31, февраль - 28, а март - 31. Выведите в консоль словарь.

var dictionary: [String: Int] = ["January": 31, "February": 28, "March": 31]
print(dictionary)

//Используя синтаксис подскриптов (например player["Richard"] = 500), добавьте в словарь значение для апреля (April), равное 30. Выведите в консоль словарь.

dictionary["April"] = 30
print(dictionary)

//Это високосный год! Используйте метод updateValue(_:, forKey:), чтобы обновить количество дней в феврале до 29. Напечатайте словарь.

dictionary.updateValue(29, forKey: "February")
print(dictionary)

//Используйте синтаксис if-let, чтобы получить количество дней в январе. Если значение присутствует, напечатайте "January has 31 days", где 31 - это значение, полученное из словаря.

if let januaryDays = dictionary["January"] {
    print("January has 31 days")
} else {
    print("January hasn't 31 days")
}


//Задание 4
//Даны следующие массивы.
let shapesArray = ["Circle", "Square", "Triangle"]
let colorsArray = ["Red", "Green", "Blue"]

//Создайте с этими массивами новый словарь [String: [String]], где . shapesArray должен использовать ключ "Shapes", а colorsArray должен использовать ключ "Colors". Распечатайте полученный словарь.

var newDictionary =  [String: [String]]()
newDictionary["Shapes"] = shapesArray
newDictionary["Colors"] = colorsArray
print(newDictionary)

//*Напечатайте последний элемент массива colorsArray, получив его через созданный вами словарь. Вам нужно будет использовать синтаксис if-let.
if let colors = newDictionary["Colors"] {
    let lastColor = colors.last ?? "No color" // nil coalescing operator
    print(lastColor)
}

//Задание 5
//В предыдущих упражнениях вы написали код, помогающий пользователям управлять темпом бега. Вы решаете, что могли бы использовать словарь, позволяющий пользователям сохранять различные темпы, с которыми они регулярно бегают или проводят интервальные тренировки.
//Создайте словарные шаги типа [String: Double] и назначьте ему ключи "Easy", "Medium" и "Fast", соответствующими значениям 10.0, 8.0 и 6.0. Эти цифры соответствуют пробегу мили в минутах. Распечатайте словарь.

var paces = ["Easy": 10.0, "Medium": 8.0, "Fast": 6.0]
print(paces)
//Добавьте новую пару ключ/значение в словарь. Ключом должен быть "Sprint", а значением - 4.0. Распечатайте словарь.
paces["Sprint"] = 4.0
print(paces)
//Представьте, что пользователь, о котором идет речь, со временем становится быстрее и решает обновить свой темп во время пробежек. Обновите значения "Medium" и "Fast" до 7.5 и 5.8 соответственно. Распечатайте словарь.
paces["Medium"] = 7.5
paces["Fast"] = 5.8
print(paces)

//Представьте, что пользователь, о котором идет речь, решает не сохранять "Sprint". Удалите "Sprint" из словаря. Распечатайте словарь.

paces.removeValue(forKey: "Sprint")
print(paces)
//Когда пользователь выбирает темп, вы хотите, чтобы приложение печатало о том, что оно будет поддерживать его / ее в темпе. Представьте, что пользователь выбирает "Medium". Получив доступ к значению из словаря, выведите инструкцию, в которой говорится: "Хорошо! Я буду поддерживать вас в темпе <ВСТАВИТЬ ЗНАЧЕНИЕ ТЕМПА ЗДЕСЬ> минута в милю".

if let pace = paces["Medium"] {
    print("Хорошо! Я буду поддерживать вас в темпе \(pace) минута в милю")
}
