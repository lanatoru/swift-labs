//Задание 1
//Создайте функцию под названием introduceMyself, которая выводит краткое приветствие о вас. Вызовите функцию и посмотрите результат.

func introduceMyself() -> String{
    return "Меня зовут Юлия"
}

print(introduceMyself())

//Задание 2
//2.1 Мы сейчас напишем программу, которая используется во многих фитнес трекерах. Для этого вам нужно будет использовать функции. Например, у вас есть фитнес трекер, который считает количество шагов в переменной steps. Количество шагов увеличивается с каждым шагом и это повторяющийся процесс. Поэтому этот процесс можно превратить в функцию.
//Для этого нужно создать переменную steps. Затем напишите функцию incrementSteps, которая будет увеличивать steps на единицу, и выводить его значение в консоль. Вызовите функцию несколько раз.

var steps = 8789

func incrementSteps() {
    steps += 1
    print(steps)
}

incrementSteps()
incrementSteps()
incrementSteps()

//2.2  Представьте, что пользователь поставил себе цель, сколько шагов в день он хочет пройти. Его цель хранится в константе goal. Если вы хотите показать прогресс, то можно внутри функции использовать поток управления (if else), который проверяет сколько шагов осталось до цели и выдает результат. Для этого нужно создать функцию progressUpdate Функция должна вывести:
//«У вас хорошее начало», если steps меньше 10% от goal,
//«Вы почти на полпути!» если steps меньше половины goal,
//«Вы на полпути!» если steps меньше 90% от goal,
//«Вы почти у цели!» если steps меньше, чем goal,
//«Вы превзошли свою цель!» в остальных случаях.
//Вызовите функцию и посмотрите на результат.


let goal = 10000

func progressUpdate() {
    if Double(steps) < Double(goal) * 0.1 {
        print("У вас хорошее начало")
    } else if Double(steps) < Double(goal) / 2 {
        print("Вы почти на полпути!")
    } else if Double(steps) < Double(goal) * 0.9 {
        print("Вы на полпути!")
    } else if Double(steps) < Double(goal) {
        print("Вы почти у цели!")
    } else {
        print("Вы превзошли свою цель!")
    }
}

progressUpdate()


//Задание 3
//Создайте функцию introduction, которая знакомит человека с другими. У этой функции два параметра name и home типа String и один параметр age типа Int. Функция должна напечатать короткую информацию о человеке. Если ввести значение «Олжас», «Алматы» и 33, то функция должна вывести «Олжас, 33 года, город Алматы». Вызовите функцию и посмотрите результат.

func introduction(name: String, home: String, age: Int) {
    print("\(name), \(age) года, город \(home)")
}

introduction(name: "Олжас", home: "Алматы", age: 33)

//Задание 4
//4.1 Перепишите функцию progressUpdate с двумя параметрами steps и goal типа Int.
//Как ранее функция должна вывести:
//«У вас хорошее начало», если steps меньше 10% от goal,
//«Вы почти на полпути!» если steps меньше половины goal,
//«Вы на полпути!» если steps меньше 90% от goal,
//«Вы почти у цели!» если steps меньше, чем goal,
//«Вы превзошли свою цель!» в остальных случаях.
//Вызовите функцию несколько раз с разными значениями steps и goal. Проверьте результат.
//

func progressUpdate2(steps: Int, goal: Int) {
    if Double(steps) < Double(goal) * 0.1 {
        print("У вас хорошее начало")
    } else if Double(steps) < Double(goal) / 2 {
        print("Вы почти на полпути!")
    } else if Double(steps) < Double(goal) * 0.9 {
        print("Вы на полпути!")
    } else if Double(steps) < Double(goal) {
        print("Вы почти у цели!")
    } else {
        print("Вы превзошли свою цель!")
    }
}

progressUpdate2(steps: 6100, goal: 6000)

//4.2 Давайте напишем функцию для фитнес трекера, которая поможет бегунам не терять темп чтобы постичь к цели. Напишите функцию под названием pacing, которая измеряет темп и принимает четыре параметра currentDistance, totalDistance, currentTime и goalTime. Все они типа Double. Ваша функция должна вычислять темп пользователя, сравнить его с нужным темпом goalTime. Если темп больше, выведите «Так держать!» в консоль, в противном случае выведите «Тебе нужно поднапрячься немного сильнее!»
//Формула темпа: pace = currentTime/(currentDistance/totalDistance)
//

func pacing(currentDistance: Double, totalDistance: Double, currentTime: Double, goalTime: Double) {
    let pace = currentTime/(currentDistance/totalDistance)
    if pace <= goalTime {
        print("Так держать!")
    } else {
        print("Тебе нужно поднапрячься немного сильнее!")
    }
}

pacing(currentDistance: 8600, totalDistance: 10000, currentTime: 45.2, goalTime: 50.4)

//Задание 5
//5.1 Напишите функцию которая называется greeting. Создайте параметр name типа String и возвращает тип String. Если вы дали значение «Олжас», то функция возвращает текст в виде: «Привет Олжас, как твои дела?» Выведите в консоль функцию.

func greeting(name: String) -> String {
    return "Привет \(name), как твои дела?"
}

print(greeting(name: "Олжас"))

//5.2 Напишите функцию c двумя параметрами типа Int и возвращает значение типа Int. Функция должна умножить два значения и добавить к нему 2 и вернуть результат. Выведите в консоль функцию.
//

func calculate(num1: Int, num2: Int) -> Int {
    return num1 * num2 + 2
}

print(calculate(num1: 6, num2: 5))
